/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ForgotPasswordRouteImport } from './routes/forgot-password'
import { Route as WorkspaceRouteRouteImport } from './routes/workspace/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as WorkspaceIndexRouteImport } from './routes/workspace/index'
import { Route as WorkspaceUsersRouteRouteImport } from './routes/workspace/users/route'
import { Route as WorkspaceUsersIndexRouteImport } from './routes/workspace/users/index'
import { Route as WorkspaceUsersUserIdIndexRouteImport } from './routes/workspace/users/$userId/index'

const ForgotPasswordRoute = ForgotPasswordRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRouteImport,
} as any)
const WorkspaceRouteRoute = WorkspaceRouteRouteImport.update({
  id: '/workspace',
  path: '/workspace',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const WorkspaceIndexRoute = WorkspaceIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => WorkspaceRouteRoute,
} as any)
const WorkspaceUsersRouteRoute = WorkspaceUsersRouteRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => WorkspaceRouteRoute,
} as any)
const WorkspaceUsersIndexRoute = WorkspaceUsersIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => WorkspaceUsersRouteRoute,
} as any)
const WorkspaceUsersUserIdIndexRoute =
  WorkspaceUsersUserIdIndexRouteImport.update({
    id: '/$userId/',
    path: '/$userId/',
    getParentRoute: () => WorkspaceUsersRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/workspace': typeof WorkspaceRouteRouteWithChildren
  '/forgot-password': typeof ForgotPasswordRoute
  '/workspace/users': typeof WorkspaceUsersRouteRouteWithChildren
  '/workspace/': typeof WorkspaceIndexRoute
  '/workspace/users/': typeof WorkspaceUsersIndexRoute
  '/workspace/users/$userId': typeof WorkspaceUsersUserIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/forgot-password': typeof ForgotPasswordRoute
  '/workspace': typeof WorkspaceIndexRoute
  '/workspace/users': typeof WorkspaceUsersIndexRoute
  '/workspace/users/$userId': typeof WorkspaceUsersUserIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/workspace': typeof WorkspaceRouteRouteWithChildren
  '/forgot-password': typeof ForgotPasswordRoute
  '/workspace/users': typeof WorkspaceUsersRouteRouteWithChildren
  '/workspace/': typeof WorkspaceIndexRoute
  '/workspace/users/': typeof WorkspaceUsersIndexRoute
  '/workspace/users/$userId/': typeof WorkspaceUsersUserIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/workspace'
    | '/forgot-password'
    | '/workspace/users'
    | '/workspace/'
    | '/workspace/users/'
    | '/workspace/users/$userId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/forgot-password'
    | '/workspace'
    | '/workspace/users'
    | '/workspace/users/$userId'
  id:
    | '__root__'
    | '/'
    | '/workspace'
    | '/forgot-password'
    | '/workspace/users'
    | '/workspace/'
    | '/workspace/users/'
    | '/workspace/users/$userId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  WorkspaceRouteRoute: typeof WorkspaceRouteRouteWithChildren
  ForgotPasswordRoute: typeof ForgotPasswordRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/forgot-password': {
      id: '/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof ForgotPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/workspace': {
      id: '/workspace'
      path: '/workspace'
      fullPath: '/workspace'
      preLoaderRoute: typeof WorkspaceRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/workspace/': {
      id: '/workspace/'
      path: '/'
      fullPath: '/workspace/'
      preLoaderRoute: typeof WorkspaceIndexRouteImport
      parentRoute: typeof WorkspaceRouteRoute
    }
    '/workspace/users': {
      id: '/workspace/users'
      path: '/users'
      fullPath: '/workspace/users'
      preLoaderRoute: typeof WorkspaceUsersRouteRouteImport
      parentRoute: typeof WorkspaceRouteRoute
    }
    '/workspace/users/': {
      id: '/workspace/users/'
      path: '/'
      fullPath: '/workspace/users/'
      preLoaderRoute: typeof WorkspaceUsersIndexRouteImport
      parentRoute: typeof WorkspaceUsersRouteRoute
    }
    '/workspace/users/$userId/': {
      id: '/workspace/users/$userId/'
      path: '/$userId'
      fullPath: '/workspace/users/$userId'
      preLoaderRoute: typeof WorkspaceUsersUserIdIndexRouteImport
      parentRoute: typeof WorkspaceUsersRouteRoute
    }
  }
}

interface WorkspaceUsersRouteRouteChildren {
  WorkspaceUsersIndexRoute: typeof WorkspaceUsersIndexRoute
  WorkspaceUsersUserIdIndexRoute: typeof WorkspaceUsersUserIdIndexRoute
}

const WorkspaceUsersRouteRouteChildren: WorkspaceUsersRouteRouteChildren = {
  WorkspaceUsersIndexRoute: WorkspaceUsersIndexRoute,
  WorkspaceUsersUserIdIndexRoute: WorkspaceUsersUserIdIndexRoute,
}

const WorkspaceUsersRouteRouteWithChildren =
  WorkspaceUsersRouteRoute._addFileChildren(WorkspaceUsersRouteRouteChildren)

interface WorkspaceRouteRouteChildren {
  WorkspaceUsersRouteRoute: typeof WorkspaceUsersRouteRouteWithChildren
  WorkspaceIndexRoute: typeof WorkspaceIndexRoute
}

const WorkspaceRouteRouteChildren: WorkspaceRouteRouteChildren = {
  WorkspaceUsersRouteRoute: WorkspaceUsersRouteRouteWithChildren,
  WorkspaceIndexRoute: WorkspaceIndexRoute,
}

const WorkspaceRouteRouteWithChildren = WorkspaceRouteRoute._addFileChildren(
  WorkspaceRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  WorkspaceRouteRoute: WorkspaceRouteRouteWithChildren,
  ForgotPasswordRoute: ForgotPasswordRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
